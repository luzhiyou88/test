2016-05-04 13:33:34,257 ERROR [com.csmy.my.center.filter.SystemInitListener] - <********************************************>
2016-05-04 13:33:34,406 ERROR [com.csmy.my.center.filter.SystemInitListener] - <........后台管理平台开始启动...........>
2016-05-04 13:33:34,406 ERROR [com.csmy.my.center.filter.SystemInitListener] - <********************************************>
2016-05-04 13:33:34,406 ERROR [com.csmy.my.center.filter.SystemInitListener] - <开始加载数据库中所有公用数据到缓存中...>
2016-05-04 13:33:34,418 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=admin.getCodeNameList】，SQL语句为→     select distinct t.field_code as code_name from sys_code t where 1=1  >
2016-05-04 13:33:36,891 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=admin.getCodeValueList】，SQL语句为→     select * from sys_code t where t.field_code='GOOD_TAG'  >
2016-05-04 13:33:36,977 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=admin.getCodeValueList】，SQL语句为→     select * from sys_code t where t.field_code='STATE'  >
2016-05-04 13:33:37,051 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=admin.getCodeValueList】，SQL语句为→     select * from sys_code t where t.field_code='EDITMODE'  >
2016-05-04 13:33:37,126 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=admin.getCodeValueList】，SQL语句为→     select * from sys_code t where t.field_code='USERTYPE'  >
2016-05-04 13:33:37,202 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=admin.getCodeValueList】，SQL语句为→     select * from sys_code t where t.field_code='ENABLED'  >
2016-05-04 13:33:37,283 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=admin.getCodeValueList】，SQL语句为→     select * from sys_code t where t.field_code='ORDER_STATE'  >
2016-05-04 13:33:37,387 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=admin.getCodeValueList】，SQL语句为→     select * from sys_code t where t.field_code='TIME_TYPE'  >
2016-05-04 13:33:37,464 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=admin.getCodeValueList】，SQL语句为→     select * from sys_code t where t.field_code='SENDER_TYPE'  >
2016-05-04 13:33:37,546 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=admin.getCodeValueList】，SQL语句为→     select * from sys_code t where t.field_code='ORDER_CSTATE'  >
2016-05-04 13:33:37,618 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=admin.getCodeValueList】，SQL语句为→     select * from sys_code t where t.field_code='PAYSATE'  >
2016-05-04 13:33:37,709 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=admin.getCodeValueList】，SQL语句为→     select * from sys_code t where t.field_code='CULEVEL'  >
2016-05-04 13:33:37,788 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=admin.getCodeValueList】，SQL语句为→     select * from sys_code t where t.field_code='CUSTATE'  >
2016-05-04 13:33:37,868 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=admin.getCodeValueList】，SQL语句为→     select * from sys_code t where t.field_code='ORDER_TYPE'  >
2016-05-04 13:33:37,944 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=admin.getCodeValueList】，SQL语句为→     select * from sys_code t where t.field_code='ROLE_TYPE'  >
2016-05-04 13:33:38,021 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=admin.getCodeValueList】，SQL语句为→     select * from sys_code t where t.field_code='LEAFTYPE'  >
2016-05-04 13:33:38,095 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=admin.getCodeValueList】，SQL语句为→     select * from sys_code t where t.field_code='EXPAND'  >
2016-05-04 13:33:38,175 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=admin.getCodeValueList】，SQL语句为→     select * from sys_code t where t.field_code='REMARK_TEXT'  >
2016-05-04 13:33:38,258 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=admin.getCodeValueList】，SQL语句为→     select * from sys_code t where t.field_code='DATE_FILTER'  >
2016-05-04 13:33:38,338 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=admin.getParamCodeList】，SQL语句为→     select * from sys_param t where 1=1  >
2016-05-04 13:33:38,428 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=role.getSystemRole】，SQL语句为→     select * from (            select     t1.role_code,    t1.role_name,    t1.role_type,    t1.role_order,    t1.role_desc     from sys_role t1 where 1=1                          order by t1.role_order asc       ) tt where 1=1  >
2016-05-04 13:33:38,505 ERROR [com.csmy.my.center.filter.SystemInitListener] - <加载数据库中所有公用数据到缓存中结束...>
2016-05-04 13:33:38,505 ERROR [com.csmy.my.center.filter.SystemInitListener] - <************************************************************************>
2016-05-04 13:33:38,505 ERROR [com.csmy.my.center.filter.SystemInitListener] - <后台管理平台启动成功[2016-05-04 13:33:38]>
2016-05-04 13:33:38,505 ERROR [com.csmy.my.center.filter.SystemInitListener] - <启动总耗时: 0分 4秒>
2016-05-04 13:33:38,506 ERROR [com.csmy.my.center.filter.SystemInitListener] - <************************************************************************>
2016-05-04 13:36:13,382 ERROR [com.csmy.my.center.util.servlet.UserLoginServlet] - <帐户[admin]登陆失败:帐号或密码输入错误,请重新输入>
2016-05-04 13:42:50,521 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:login!userLogin.ct>
2016-05-04 13:42:50,521 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/login!userLogin.ct>
2016-05-04 13:42:50,521 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 13:42:50,521 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 13:42:50,521 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/login!userLogin.ct>
2016-05-04 13:42:50,521 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 13:42:50,522 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 13:42:50,522 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 13:42:50,522 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 13:42:50,609 ERROR [com.csmy.my.center.dao.UserInfoDao] - <执行【sqlname=admin.getUserByAcount】，SQL语句为→      select * from user_info t where 1=1      and              t.account='admin'                 and              t.password='nbgYr0DpdB8='                   >
2016-05-04 13:42:50,688 ERROR [com.csmy.my.center.dao.UserInfoDao] - <执行【sqlname=admin.getUserExtendInfoById】，SQL语句为→      select * from user_exp_info t where 1=1      and              t.user_id='38521035'              >
2016-05-04 13:42:51,843 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:index!getMainLeftTree.ct>
2016-05-04 13:42:51,844 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/index!getMainLeftTree.ct>
2016-05-04 13:42:51,844 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 13:42:51,844 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 13:42:51,844 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/index!getMainLeftTree.ct>
2016-05-04 13:42:51,844 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 13:42:51,844 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 13:42:51,844 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 13:42:51,844 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 13:42:51,883 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=role.getAllRolePermits】，SQL语句为→         select *     from sys_module m    where m. module_code in          (select distinct t. module_id from sys_role_fun t where t.role_id in ('57414897'))          order by m.module_order asc     >
2016-05-04 13:43:30,293 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:user!getCustomerList.ct>
2016-05-04 13:43:30,293 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/user!getCustomerList.ct>
2016-05-04 13:43:30,293 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 13:43:30,293 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 13:43:30,293 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/user!getCustomerList.ct>
2016-05-04 13:43:30,293 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 13:43:30,293 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 13:43:30,293 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 13:43:30,293 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 13:43:30,326 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=resource.getCustomerInfo】，SQL语句为→     select * from (         select t.* from wxb_customer t where 1=1            and     t.customer_type = '1'           order by t.createtime desc       ) tt where 1=1   >
2016-05-04 13:43:30,412 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=resource.getCustomerInfoCount】，SQL语句为→    select count(*) as cnt from (          select t.* from wxb_customer t where 1=1            and     t.customer_type = '1'           order by t.createtime desc       ) tt where 1=1  >
2016-05-04 13:48:36,545 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getCustOrderCount.ct>
2016-05-04 13:48:36,545 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getCustOrderCount.ct>
2016-05-04 13:48:36,545 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 13:48:36,545 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 13:48:36,545 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getCustOrderCount.ct>
2016-05-04 13:48:36,545 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 13:48:36,545 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 13:48:36,545 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 13:48:36,545 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 13:48:59,008 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getUserMoneyList.ct>
2016-05-04 13:48:59,008 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getUserMoneyList.ct>
2016-05-04 13:48:59,008 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 13:48:59,009 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 13:48:59,009 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getUserMoneyList.ct>
2016-05-04 13:48:59,009 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 13:48:59,009 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 13:48:59,009 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 13:48:59,009 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 13:48:59,011 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserMoneyList】，SQL语句为→     select * from (       select t.um_id,t.user_id,t.order_money, t.visit_money,t.own_money,t.state,t.createtime,t.ocid,       t1.name,        t1.account,        t2.order_id,       t2.createtime as count_time,       TIMESTAMPDIFF(DAY,now(),t2.exp_pay_date)as exp_day,       t1. pay_account    from wxb_user_money t, wxb_memeber t1,wxb_order_count t2   where t. user_id = t1. memeber_id  and t.ocid = t2.ocid                        order by t.user_id asc , t.createtime desc       ) tt where 1=1  >
2016-05-04 13:48:59,099 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserMoneyListCount】，SQL语句为→    select count(*) as cnt from (       select t.um_id,t.user_id,t.order_money, t.visit_money,t.own_money,t.state,t.createtime,t.ocid,       t1.name,        t1.account,        t2.order_id,       t2.createtime as count_time,       TIMESTAMPDIFF(DAY,now(),t2.exp_pay_date)as exp_day,       t1. pay_account    from wxb_user_money t, wxb_memeber t1,wxb_order_count t2   where t. user_id = t1. memeber_id  and t.ocid = t2.ocid                        order by t.user_id asc , t.createtime desc       ) tt where 1=1  >
2016-05-04 15:04:49,923 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getUserMoneyList.ct>
2016-05-04 15:04:49,924 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getUserMoneyList.ct>
2016-05-04 15:04:49,924 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 15:04:49,924 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 15:04:49,925 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getUserMoneyList.ct>
2016-05-04 15:04:49,925 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 15:04:49,925 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 15:04:49,925 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 15:04:49,925 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 15:04:52,012 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:login!loginOut.ct>
2016-05-04 15:04:52,013 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/login!loginOut.ct>
2016-05-04 15:04:52,013 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 15:04:52,013 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 15:04:52,013 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/login!loginOut.ct>
2016-05-04 15:04:52,013 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 15:04:52,013 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 15:04:52,013 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 15:04:52,013 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 15:04:59,416 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:login!userLogin.ct>
2016-05-04 15:04:59,417 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/login!userLogin.ct>
2016-05-04 15:04:59,417 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 15:04:59,417 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 15:04:59,417 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/login!userLogin.ct>
2016-05-04 15:04:59,417 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 15:04:59,417 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 15:04:59,417 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 15:04:59,417 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 15:04:59,421 ERROR [com.csmy.my.center.dao.UserInfoDao] - <执行【sqlname=admin.getUserByAcount】，SQL语句为→      select * from user_info t where 1=1      and              t.account='admin'                 and              t.password='nbgYr0DpdB8='                   >
2016-05-04 15:04:59,495 ERROR [com.csmy.my.center.dao.UserInfoDao] - <执行【sqlname=admin.getUserExtendInfoById】，SQL语句为→      select * from user_exp_info t where 1=1      and              t.user_id='38521035'              >
2016-05-04 15:05:00,224 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:index!getMainLeftTree.ct>
2016-05-04 15:05:00,224 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/index!getMainLeftTree.ct>
2016-05-04 15:05:00,224 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 15:05:00,224 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 15:05:00,224 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/index!getMainLeftTree.ct>
2016-05-04 15:05:00,224 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 15:05:00,224 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 15:05:00,224 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 15:05:00,224 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 15:05:00,227 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=role.getAllRolePermits】，SQL语句为→         select *     from sys_module m    where m. module_code in          (select distinct t. module_id from sys_role_fun t where t.role_id in ('57414897'))          order by m.module_order asc     >
2016-05-04 15:05:04,398 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getUserMoneyList.ct>
2016-05-04 15:05:04,398 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getUserMoneyList.ct>
2016-05-04 15:05:04,398 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 15:05:04,398 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 15:05:04,398 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getUserMoneyList.ct>
2016-05-04 15:05:04,398 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 15:05:04,398 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 15:05:04,399 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 15:05:04,399 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 15:05:04,402 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserMoneyList】，SQL语句为→     select * from (       select t.um_id,t.user_id,t.order_money, t.visit_money,t.own_money,t.state,t.createtime,t.ocid,       t1.name,        t1.account,        t2.order_id,       t2.createtime as count_time,       TIMESTAMPDIFF(DAY,now(),t2.exp_pay_date)as exp_day,       t1. pay_account    from wxb_user_money t, wxb_memeber t1,wxb_order_count t2   where t. user_id = t1. memeber_id  and t.ocid = t2.ocid                        order by t.user_id asc , t.createtime desc       ) tt where 1=1  >
2016-05-04 15:05:04,491 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserMoneyListCount】，SQL语句为→    select count(*) as cnt from (       select t.um_id,t.user_id,t.order_money, t.visit_money,t.own_money,t.state,t.createtime,t.ocid,       t1.name,        t1.account,        t2.order_id,       t2.createtime as count_time,       TIMESTAMPDIFF(DAY,now(),t2.exp_pay_date)as exp_day,       t1. pay_account    from wxb_user_money t, wxb_memeber t1,wxb_order_count t2   where t. user_id = t1. memeber_id  and t.ocid = t2.ocid                        order by t.user_id asc , t.createtime desc       ) tt where 1=1  >
2016-05-04 15:05:14,576 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!goPayMoney.ct>
2016-05-04 15:05:14,576 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!goPayMoney.ct>
2016-05-04 15:05:14,576 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 15:05:14,576 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 15:05:14,577 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!goPayMoney.ct>
2016-05-04 15:05:14,577 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 15:05:14,577 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 15:05:14,577 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 15:05:14,577 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 15:05:14,580 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserMoneyList】，SQL语句为→     select * from (       select t.um_id,t.user_id,t.order_money, t.visit_money,t.own_money,t.state,t.createtime,t.ocid,       t1.name,        t1.account,        t2.order_id,       t2.createtime as count_time,       TIMESTAMPDIFF(DAY,now(),t2.exp_pay_date)as exp_day,       t1. pay_account    from wxb_user_money t, wxb_memeber t1,wxb_order_count t2   where t. user_id = t1. memeber_id  and t.ocid = t2.ocid       and          t1.pay_account = '18611541561'      and          t.state = '0'                 order by t.user_id asc , t.createtime desc       ) tt where 1=1  >
2016-05-04 15:06:34,501 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!goPayMoney.ct>
2016-05-04 15:06:34,502 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!goPayMoney.ct>
2016-05-04 15:06:34,502 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 15:06:34,502 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 15:06:34,502 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!goPayMoney.ct>
2016-05-04 15:06:34,502 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 15:06:34,502 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 15:06:34,502 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 15:06:34,502 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 15:06:34,506 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserMoneyList】，SQL语句为→     select * from (       select t.um_id,t.user_id,t.order_money, t.visit_money,t.own_money,t.state,t.createtime,t.ocid,       t1.name,        t1.account,        t2.order_id,       t2.createtime as count_time,       TIMESTAMPDIFF(DAY,now(),t2.exp_pay_date)as exp_day,       t1. pay_account    from wxb_user_money t, wxb_memeber t1,wxb_order_count t2   where t. user_id = t1. memeber_id  and t.ocid = t2.ocid    and          t.um_id in (156)                       order by t.user_id asc , t.createtime desc       ) tt where 1=1  >
2016-05-04 15:07:20,322 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getUserMoneyList.ct>
2016-05-04 15:07:20,323 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getUserMoneyList.ct>
2016-05-04 15:07:20,323 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 15:07:20,323 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 15:07:20,323 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getUserMoneyList.ct>
2016-05-04 15:07:20,323 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 15:07:20,323 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 15:07:20,323 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 15:07:20,323 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 15:07:20,326 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserMoneyList】，SQL语句为→     select * from (       select t.um_id,t.user_id,t.order_money, t.visit_money,t.own_money,t.state,t.createtime,t.ocid,       t1.name,        t1.account,        t2.order_id,       t2.createtime as count_time,       TIMESTAMPDIFF(DAY,now(),t2.exp_pay_date)as exp_day,       t1. pay_account    from wxb_user_money t, wxb_memeber t1,wxb_order_count t2   where t. user_id = t1. memeber_id  and t.ocid = t2.ocid                        order by t.user_id asc , t.createtime desc       ) tt where 1=1  >
2016-05-04 15:07:20,412 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserMoneyListCount】，SQL语句为→    select count(*) as cnt from (       select t.um_id,t.user_id,t.order_money, t.visit_money,t.own_money,t.state,t.createtime,t.ocid,       t1.name,        t1.account,        t2.order_id,       t2.createtime as count_time,       TIMESTAMPDIFF(DAY,now(),t2.exp_pay_date)as exp_day,       t1. pay_account    from wxb_user_money t, wxb_memeber t1,wxb_order_count t2   where t. user_id = t1. memeber_id  and t.ocid = t2.ocid                        order by t.user_id asc , t.createtime desc       ) tt where 1=1  >
2016-05-04 15:07:59,067 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getUserMoneyList.ct>
2016-05-04 15:07:59,068 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getUserMoneyList.ct>
2016-05-04 15:07:59,068 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 15:07:59,068 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 15:07:59,068 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getUserMoneyList.ct>
2016-05-04 15:07:59,068 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 15:07:59,068 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 15:07:59,068 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 15:07:59,068 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 15:07:59,070 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserMoneyList】，SQL语句为→     select * from (       select t.um_id,t.user_id,t.order_money, t.visit_money,t.own_money,t.state,t.createtime,t.ocid,       t1.name,        t1.account,        t2.order_id,       t2.createtime as count_time,       TIMESTAMPDIFF(DAY,now(),t2.exp_pay_date)as exp_day,       t1. pay_account    from wxb_user_money t, wxb_memeber t1,wxb_order_count t2   where t. user_id = t1. memeber_id  and t.ocid = t2.ocid                        order by t.user_id asc , t.createtime desc       ) tt where 1=1  >
2016-05-04 15:07:59,157 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserMoneyListCount】，SQL语句为→    select count(*) as cnt from (       select t.um_id,t.user_id,t.order_money, t.visit_money,t.own_money,t.state,t.createtime,t.ocid,       t1.name,        t1.account,        t2.order_id,       t2.createtime as count_time,       TIMESTAMPDIFF(DAY,now(),t2.exp_pay_date)as exp_day,       t1. pay_account    from wxb_user_money t, wxb_memeber t1,wxb_order_count t2   where t. user_id = t1. memeber_id  and t.ocid = t2.ocid                        order by t.user_id asc , t.createtime desc       ) tt where 1=1  >
2016-05-04 15:08:00,657 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getUserMoneyList.ct>
2016-05-04 15:08:00,658 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getUserMoneyList.ct>
2016-05-04 15:08:00,658 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 15:08:00,658 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 15:08:00,658 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getUserMoneyList.ct>
2016-05-04 15:08:00,658 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 15:08:00,658 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 15:08:00,658 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 15:08:00,658 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 15:08:00,661 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserMoneyList】，SQL语句为→     select * from (       select t.um_id,t.user_id,t.order_money, t.visit_money,t.own_money,t.state,t.createtime,t.ocid,       t1.name,        t1.account,        t2.order_id,       t2.createtime as count_time,       TIMESTAMPDIFF(DAY,now(),t2.exp_pay_date)as exp_day,       t1. pay_account    from wxb_user_money t, wxb_memeber t1,wxb_order_count t2   where t. user_id = t1. memeber_id  and t.ocid = t2.ocid                        order by t.user_id asc , t.createtime desc       ) tt where 1=1  >
2016-05-04 15:08:00,749 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserMoneyListCount】，SQL语句为→    select count(*) as cnt from (       select t.um_id,t.user_id,t.order_money, t.visit_money,t.own_money,t.state,t.createtime,t.ocid,       t1.name,        t1.account,        t2.order_id,       t2.createtime as count_time,       TIMESTAMPDIFF(DAY,now(),t2.exp_pay_date)as exp_day,       t1. pay_account    from wxb_user_money t, wxb_memeber t1,wxb_order_count t2   where t. user_id = t1. memeber_id  and t.ocid = t2.ocid                        order by t.user_id asc , t.createtime desc       ) tt where 1=1  >
2016-05-04 15:08:01,916 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getUserMoneyList.ct>
2016-05-04 15:08:01,917 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getUserMoneyList.ct>
2016-05-04 15:08:01,917 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 15:08:01,917 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 15:08:01,917 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getUserMoneyList.ct>
2016-05-04 15:08:01,917 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 15:08:01,917 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 15:08:01,917 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 15:08:01,917 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 15:08:01,920 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserMoneyList】，SQL语句为→     select * from (       select t.um_id,t.user_id,t.order_money, t.visit_money,t.own_money,t.state,t.createtime,t.ocid,       t1.name,        t1.account,        t2.order_id,       t2.createtime as count_time,       TIMESTAMPDIFF(DAY,now(),t2.exp_pay_date)as exp_day,       t1. pay_account    from wxb_user_money t, wxb_memeber t1,wxb_order_count t2   where t. user_id = t1. memeber_id  and t.ocid = t2.ocid                        order by t.user_id asc , t.createtime desc       ) tt where 1=1  >
2016-05-04 15:08:02,006 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserMoneyListCount】，SQL语句为→    select count(*) as cnt from (       select t.um_id,t.user_id,t.order_money, t.visit_money,t.own_money,t.state,t.createtime,t.ocid,       t1.name,        t1.account,        t2.order_id,       t2.createtime as count_time,       TIMESTAMPDIFF(DAY,now(),t2.exp_pay_date)as exp_day,       t1. pay_account    from wxb_user_money t, wxb_memeber t1,wxb_order_count t2   where t. user_id = t1. memeber_id  and t.ocid = t2.ocid                        order by t.user_id asc , t.createtime desc       ) tt where 1=1  >
2016-05-04 15:08:05,804 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getUserMoneyList.ct>
2016-05-04 15:08:05,806 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getUserMoneyList.ct>
2016-05-04 15:08:05,806 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 15:08:05,806 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 15:08:05,806 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getUserMoneyList.ct>
2016-05-04 15:08:05,806 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 15:08:05,806 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 15:08:05,806 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 15:08:05,806 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 15:08:05,812 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserMoneyList】，SQL语句为→     select * from (       select t.um_id,t.user_id,t.order_money, t.visit_money,t.own_money,t.state,t.createtime,t.ocid,       t1.name,        t1.account,        t2.order_id,       t2.createtime as count_time,       TIMESTAMPDIFF(DAY,now(),t2.exp_pay_date)as exp_day,       t1. pay_account    from wxb_user_money t, wxb_memeber t1,wxb_order_count t2   where t. user_id = t1. memeber_id  and t.ocid = t2.ocid          and          t.state = '0'                 order by t.user_id asc , t.createtime desc       ) tt where 1=1  >
2016-05-04 15:08:05,893 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserMoneyListCount】，SQL语句为→    select count(*) as cnt from (       select t.um_id,t.user_id,t.order_money, t.visit_money,t.own_money,t.state,t.createtime,t.ocid,       t1.name,        t1.account,        t2.order_id,       t2.createtime as count_time,       TIMESTAMPDIFF(DAY,now(),t2.exp_pay_date)as exp_day,       t1. pay_account    from wxb_user_money t, wxb_memeber t1,wxb_order_count t2   where t. user_id = t1. memeber_id  and t.ocid = t2.ocid          and          t.state = '0'                 order by t.user_id asc , t.createtime desc       ) tt where 1=1  >
2016-05-04 15:08:16,428 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getPayLogList.ct>
2016-05-04 15:08:16,429 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getPayLogList.ct>
2016-05-04 15:08:16,429 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 15:08:16,429 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 15:08:16,429 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getPayLogList.ct>
2016-05-04 15:08:16,429 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 15:08:16,429 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 15:08:16,429 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 15:08:16,429 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 15:08:16,432 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getPayLogList】，SQL语句为→     select * from (      select      t.pay_id,     t.pay_account,     t.account_name,     t.alipay_code,     t.pay_money,     t.pay_time,     t.operater,     t.createtime,     t.remark   from wxb_pay_log t where 1=1            order by t.createtime desc       ) tt where 1=1  >
2016-05-04 15:08:16,512 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getPayLogListCount】，SQL语句为→    select count(*) as cnt from (      select      t.pay_id,     t.pay_account,     t.account_name,     t.alipay_code,     t.pay_money,     t.pay_time,     t.operater,     t.createtime,     t.remark   from wxb_pay_log t where 1=1            order by t.createtime desc       ) tt where 1=1  >
2016-05-04 15:08:32,886 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getUserMoneyList.ct>
2016-05-04 15:08:32,887 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getUserMoneyList.ct>
2016-05-04 15:08:32,887 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 15:08:32,887 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 15:08:32,887 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getUserMoneyList.ct>
2016-05-04 15:08:32,887 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 15:08:32,887 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 15:08:32,887 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 15:08:32,887 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 15:08:32,889 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserMoneyList】，SQL语句为→     select * from (       select t.um_id,t.user_id,t.order_money, t.visit_money,t.own_money,t.state,t.createtime,t.ocid,       t1.name,        t1.account,        t2.order_id,       t2.createtime as count_time,       TIMESTAMPDIFF(DAY,now(),t2.exp_pay_date)as exp_day,       t1. pay_account    from wxb_user_money t, wxb_memeber t1,wxb_order_count t2   where t. user_id = t1. memeber_id  and t.ocid = t2.ocid                        order by t.user_id asc , t.createtime desc       ) tt where 1=1  >
2016-05-04 15:08:32,975 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserMoneyListCount】，SQL语句为→    select count(*) as cnt from (       select t.um_id,t.user_id,t.order_money, t.visit_money,t.own_money,t.state,t.createtime,t.ocid,       t1.name,        t1.account,        t2.order_id,       t2.createtime as count_time,       TIMESTAMPDIFF(DAY,now(),t2.exp_pay_date)as exp_day,       t1. pay_account    from wxb_user_money t, wxb_memeber t1,wxb_order_count t2   where t. user_id = t1. memeber_id  and t.ocid = t2.ocid                        order by t.user_id asc , t.createtime desc       ) tt where 1=1  >
2016-05-04 15:08:39,842 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!goPayMoney.ct>
2016-05-04 15:08:39,843 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!goPayMoney.ct>
2016-05-04 15:08:39,843 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 15:08:39,843 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 15:08:39,843 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!goPayMoney.ct>
2016-05-04 15:08:39,843 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 15:08:39,843 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 15:08:39,843 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 15:08:39,843 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 15:08:39,845 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserMoneyList】，SQL语句为→     select * from (       select t.um_id,t.user_id,t.order_money, t.visit_money,t.own_money,t.state,t.createtime,t.ocid,       t1.name,        t1.account,        t2.order_id,       t2.createtime as count_time,       TIMESTAMPDIFF(DAY,now(),t2.exp_pay_date)as exp_day,       t1. pay_account    from wxb_user_money t, wxb_memeber t1,wxb_order_count t2   where t. user_id = t1. memeber_id  and t.ocid = t2.ocid       and          t1.pay_account = '18611541561'      and          t.state = '0'                 order by t.user_id asc , t.createtime desc       ) tt where 1=1  >
2016-05-04 15:29:08,432 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getPayLogList.ct>
2016-05-04 15:29:08,452 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getPayLogList.ct>
2016-05-04 15:29:08,452 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 15:29:08,452 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 15:29:08,452 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getPayLogList.ct>
2016-05-04 15:29:08,452 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 15:29:08,452 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 15:29:08,452 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 15:29:08,453 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 15:29:08,455 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getPayLogList】，SQL语句为→     select * from (      select      t.pay_id,     t.pay_account,     t.account_name,     t.alipay_code,     t.pay_money,     t.pay_time,     t.operater,     t.createtime,     t.remark   from wxb_pay_log t where 1=1            order by t.createtime desc       ) tt where 1=1  >
2016-05-04 15:29:09,280 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getPayLogListCount】，SQL语句为→    select count(*) as cnt from (      select      t.pay_id,     t.pay_account,     t.account_name,     t.alipay_code,     t.pay_money,     t.pay_time,     t.operater,     t.createtime,     t.remark   from wxb_pay_log t where 1=1            order by t.createtime desc       ) tt where 1=1  >
2016-05-04 16:45:33,120 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:login!userLogin.ct>
2016-05-04 16:45:33,120 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/login!userLogin.ct>
2016-05-04 16:45:33,120 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 16:45:33,120 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 16:45:33,121 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/login!userLogin.ct>
2016-05-04 16:45:33,121 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 16:45:33,121 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 16:45:33,121 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 16:45:33,121 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 16:45:33,124 ERROR [com.csmy.my.center.dao.UserInfoDao] - <执行【sqlname=admin.getUserByAcount】，SQL语句为→      select * from user_info t where 1=1      and              t.account='admin'                 and              t.password='nbgYr0DpdB8='                   >
2016-05-04 16:45:33,195 ERROR [com.csmy.my.center.dao.UserInfoDao] - <执行【sqlname=admin.getUserExtendInfoById】，SQL语句为→      select * from user_exp_info t where 1=1      and              t.user_id='38521035'              >
2016-05-04 16:45:34,040 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:index!getMainLeftTree.ct>
2016-05-04 16:45:34,041 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/index!getMainLeftTree.ct>
2016-05-04 16:45:34,041 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 16:45:34,041 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 16:45:34,041 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/index!getMainLeftTree.ct>
2016-05-04 16:45:34,041 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 16:45:34,041 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 16:45:34,041 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 16:45:34,041 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 16:45:34,043 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=role.getAllRolePermits】，SQL语句为→         select *     from sys_module m    where m. module_code in          (select distinct t. module_id from sys_role_fun t where t.role_id in ('57414897'))          order by m.module_order asc     >
2016-05-04 16:45:37,517 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getUserOrderCount.ct>
2016-05-04 16:45:37,518 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getUserOrderCount.ct>
2016-05-04 16:45:37,518 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 16:45:37,518 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 16:45:37,518 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getUserOrderCount.ct>
2016-05-04 16:45:37,518 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 16:45:37,518 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 16:45:37,518 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 16:45:37,518 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 16:45:45,058 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserOrderCountList】，SQL语句为→     select * from (          select tm.user_id,                tm.account,                tm.name,                tm.visit_code,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.user_id,                  t.good_id,                  t.state,                        t2.account,                        t2.visit_code,                        t2.name,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1, wxb_memeber t2            where t.sku_id = t1.sku_id and t.user_id = t2.memeber_id                             ) tm where 1=1            group by tm.user_id     ) tt where 1=1  >
2016-05-04 16:45:45,446 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserVisitMoneyCount】，SQL语句为→      select tn.jls, tn.zje, tn.ddfc, tn.yjfc, tn.sjfc    from (select count(tm.order_id) as jls,                 sum(tm.jg) as zje,                 sum(tm.fc) as ddfc,                 sum(tm.gms * tm.fc) * (0.08) as yjfc,                 sum(tm.gms * tm.jsfc) * (0.08) as sjfc            from (select t.order_id,                         t. buy_num as gms,                         t2. sku_price as jg,                         t2. sku_pmoney as fc,                         (select p.order_pmoney                            from wxb_order_count p                           where p.order_id = t.order_id                             and p.state_id = 3) as jsfc                    from wxb_order t, wxb_good_sku t2                   where t. sku_id = t2.sku_id                     and t.user_id in                         (select t1.memeber_id                            from wxb_memeber t1                           where t1. recom_user = 'jidu')) tm           where 1 = 1) tn   where 1 = 1    >
2016-05-04 16:45:45,553 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserVisitMoneyCount】，SQL语句为→      select tn.jls, tn.zje, tn.ddfc, tn.yjfc, tn.sjfc    from (select count(tm.order_id) as jls,                 sum(tm.jg) as zje,                 sum(tm.fc) as ddfc,                 sum(tm.gms * tm.fc) * (0.08) as yjfc,                 sum(tm.gms * tm.jsfc) * (0.08) as sjfc            from (select t.order_id,                         t. buy_num as gms,                         t2. sku_price as jg,                         t2. sku_pmoney as fc,                         (select p.order_pmoney                            from wxb_order_count p                           where p.order_id = t.order_id                             and p.state_id = 3) as jsfc                    from wxb_order t, wxb_good_sku t2                   where t. sku_id = t2.sku_id                     and t.user_id in                         (select t1.memeber_id                            from wxb_memeber t1                           where t1. recom_user = 'h86b')) tm           where 1 = 1) tn   where 1 = 1    >
2016-05-04 16:45:45,641 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserVisitMoneyCount】，SQL语句为→      select tn.jls, tn.zje, tn.ddfc, tn.yjfc, tn.sjfc    from (select count(tm.order_id) as jls,                 sum(tm.jg) as zje,                 sum(tm.fc) as ddfc,                 sum(tm.gms * tm.fc) * (0.08) as yjfc,                 sum(tm.gms * tm.jsfc) * (0.08) as sjfc            from (select t.order_id,                         t. buy_num as gms,                         t2. sku_price as jg,                         t2. sku_pmoney as fc,                         (select p.order_pmoney                            from wxb_order_count p                           where p.order_id = t.order_id                             and p.state_id = 3) as jsfc                    from wxb_order t, wxb_good_sku t2                   where t. sku_id = t2.sku_id                     and t.user_id in                         (select t1.memeber_id                            from wxb_memeber t1                           where t1. recom_user = 'lfge')) tm           where 1 = 1) tn   where 1 = 1    >
2016-05-04 16:45:45,753 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserOrderCountListCount】，SQL语句为→      select count(*) as cnt from (          select tm.user_id,                tm.account,                tm.name,                tm.visit_code,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.user_id,                  t.good_id,                  t.state,                        t2.account,                        t2.visit_code,                        t2.name,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1, wxb_memeber t2            where t.sku_id = t1.sku_id and t.user_id = t2.memeber_id                             ) tm where 1=1            group by tm.user_id     ) tt where 1=1  >
2016-05-04 16:45:45,953 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getTotalUserOrderCount】，SQL语句为→     select * from (          select tm.user_id,                tm.account,                tm.name,                tm.visit_code,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.user_id,                  t.good_id,                  t.state,                        t2.account,                        t2.visit_code,                        t2.name,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1, wxb_memeber t2            where t.sku_id = t1.sku_id and t.user_id = t2.memeber_id                             ) tm where 1=1          ) tt where 1=1  >
2016-05-04 16:46:11,497 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getUserOrderCount.ct>
2016-05-04 16:46:11,498 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getUserOrderCount.ct>
2016-05-04 16:46:11,498 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 16:46:11,498 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 16:46:11,498 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getUserOrderCount.ct>
2016-05-04 16:46:11,498 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 16:46:11,498 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 16:46:11,498 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 16:46:11,498 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 16:46:18,223 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserOrderCountList】，SQL语句为→     select * from (          select tm.user_id,                tm.account,                tm.name,                tm.visit_code,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.user_id,                  t.good_id,                  t.state,                        t2.account,                        t2.visit_code,                        t2.name,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1, wxb_memeber t2            where t.sku_id = t1.sku_id and t.user_id = t2.memeber_id    and         (t2.account like '%luzhiyou%'            or t2.name like '%luzhiyou%'          )                            ) tm where 1=1            group by tm.user_id     ) tt where 1=1  >
2016-05-04 16:46:18,445 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserVisitMoneyCount】，SQL语句为→      select tn.jls, tn.zje, tn.ddfc, tn.yjfc, tn.sjfc    from (select count(tm.order_id) as jls,                 sum(tm.jg) as zje,                 sum(tm.fc) as ddfc,                 sum(tm.gms * tm.fc) * (0.08) as yjfc,                 sum(tm.gms * tm.jsfc) * (0.08) as sjfc            from (select t.order_id,                         t. buy_num as gms,                         t2. sku_price as jg,                         t2. sku_pmoney as fc,                         (select p.order_pmoney                            from wxb_order_count p                           where p.order_id = t.order_id                             and p.state_id = 3) as jsfc                    from wxb_order t, wxb_good_sku t2                   where t. sku_id = t2.sku_id                     and t.user_id in                         (select t1.memeber_id                            from wxb_memeber t1                           where t1. recom_user = 'h86b')) tm           where 1 = 1) tn   where 1 = 1    >
2016-05-04 16:46:18,548 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserOrderCountListCount】，SQL语句为→      select count(*) as cnt from (          select tm.user_id,                tm.account,                tm.name,                tm.visit_code,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.user_id,                  t.good_id,                  t.state,                        t2.account,                        t2.visit_code,                        t2.name,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1, wxb_memeber t2            where t.sku_id = t1.sku_id and t.user_id = t2.memeber_id    and         (t2.account like '%luzhiyou%'            or t2.name like '%luzhiyou%'          )                            ) tm where 1=1            group by tm.user_id     ) tt where 1=1  >
2016-05-04 16:46:18,745 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getTotalUserOrderCount】，SQL语句为→     select * from (          select tm.user_id,                tm.account,                tm.name,                tm.visit_code,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.user_id,                  t.good_id,                  t.state,                        t2.account,                        t2.visit_code,                        t2.name,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1, wxb_memeber t2            where t.sku_id = t1.sku_id and t.user_id = t2.memeber_id    and         (t2.account like '%luzhiyou%'            or t2.name like '%luzhiyou%'          )                            ) tm where 1=1          ) tt where 1=1  >
2016-05-04 16:46:18,975 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getMemeberByAcount】，SQL语句为→      select * from wxb_memeber t where 1=1   and              t.account='luzhiyou'             >
2016-05-04 16:46:19,064 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getMyOrderMoney】，SQL语句为→    select u.um_id, u.own_money,o.*,wo.*,g.good_name from wxb_user_money u,wxb_order_count o,wxb_order wo,wxb_good g where  u.ocid = o.ocid  and o.order_id = wo.order_id and wo.good_id = g.good_id and u.state =0    and     u.user_id = '35117029'     >
2016-05-04 16:46:19,152 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getOrderByTelePhone】，SQL语句为→      select count(*) cnt from wxb_order t where t.buyer_phone = '13612341234'  >
2016-05-04 16:46:19,222 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getMyOrderMoneyCount】，SQL语句为→    select count(*) as cnt from wxb_user_money u,wxb_order_count o,wxb_order wo,wxb_good g where  u.ocid = o.ocid  and o.order_id = wo.order_id and wo.good_id = g.good_id and u.state =0    and     u.user_id = '35117029'     >
2016-05-04 16:46:33,591 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getUserOrderCount.ct>
2016-05-04 16:46:33,593 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getUserOrderCount.ct>
2016-05-04 16:46:33,593 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 16:46:33,593 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 16:46:33,593 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getUserOrderCount.ct>
2016-05-04 16:46:33,593 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 16:46:33,593 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 16:46:33,593 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 16:46:33,594 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 16:46:33,596 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserOrderCountList】，SQL语句为→     select * from (          select tm.user_id,                tm.account,                tm.name,                tm.visit_code,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.user_id,                  t.good_id,                  t.state,                        t2.account,                        t2.visit_code,                        t2.name,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1, wxb_memeber t2            where t.sku_id = t1.sku_id and t.user_id = t2.memeber_id                             ) tm where 1=1            group by tm.user_id     ) tt where 1=1  >
2016-05-04 16:46:33,790 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserVisitMoneyCount】，SQL语句为→      select tn.jls, tn.zje, tn.ddfc, tn.yjfc, tn.sjfc    from (select count(tm.order_id) as jls,                 sum(tm.jg) as zje,                 sum(tm.fc) as ddfc,                 sum(tm.gms * tm.fc) * (0.08) as yjfc,                 sum(tm.gms * tm.jsfc) * (0.08) as sjfc            from (select t.order_id,                         t. buy_num as gms,                         t2. sku_price as jg,                         t2. sku_pmoney as fc,                         (select p.order_pmoney                            from wxb_order_count p                           where p.order_id = t.order_id                             and p.state_id = 3) as jsfc                    from wxb_order t, wxb_good_sku t2                   where t. sku_id = t2.sku_id                     and t.user_id in                         (select t1.memeber_id                            from wxb_memeber t1                           where t1. recom_user = 'jidu')) tm           where 1 = 1) tn   where 1 = 1    >
2016-05-04 16:46:33,881 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserVisitMoneyCount】，SQL语句为→      select tn.jls, tn.zje, tn.ddfc, tn.yjfc, tn.sjfc    from (select count(tm.order_id) as jls,                 sum(tm.jg) as zje,                 sum(tm.fc) as ddfc,                 sum(tm.gms * tm.fc) * (0.08) as yjfc,                 sum(tm.gms * tm.jsfc) * (0.08) as sjfc            from (select t.order_id,                         t. buy_num as gms,                         t2. sku_price as jg,                         t2. sku_pmoney as fc,                         (select p.order_pmoney                            from wxb_order_count p                           where p.order_id = t.order_id                             and p.state_id = 3) as jsfc                    from wxb_order t, wxb_good_sku t2                   where t. sku_id = t2.sku_id                     and t.user_id in                         (select t1.memeber_id                            from wxb_memeber t1                           where t1. recom_user = 'h86b')) tm           where 1 = 1) tn   where 1 = 1    >
2016-05-04 16:46:33,979 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserVisitMoneyCount】，SQL语句为→      select tn.jls, tn.zje, tn.ddfc, tn.yjfc, tn.sjfc    from (select count(tm.order_id) as jls,                 sum(tm.jg) as zje,                 sum(tm.fc) as ddfc,                 sum(tm.gms * tm.fc) * (0.08) as yjfc,                 sum(tm.gms * tm.jsfc) * (0.08) as sjfc            from (select t.order_id,                         t. buy_num as gms,                         t2. sku_price as jg,                         t2. sku_pmoney as fc,                         (select p.order_pmoney                            from wxb_order_count p                           where p.order_id = t.order_id                             and p.state_id = 3) as jsfc                    from wxb_order t, wxb_good_sku t2                   where t. sku_id = t2.sku_id                     and t.user_id in                         (select t1.memeber_id                            from wxb_memeber t1                           where t1. recom_user = 'lfge')) tm           where 1 = 1) tn   where 1 = 1    >
2016-05-04 16:46:34,069 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserOrderCountListCount】，SQL语句为→      select count(*) as cnt from (          select tm.user_id,                tm.account,                tm.name,                tm.visit_code,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.user_id,                  t.good_id,                  t.state,                        t2.account,                        t2.visit_code,                        t2.name,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1, wxb_memeber t2            where t.sku_id = t1.sku_id and t.user_id = t2.memeber_id                             ) tm where 1=1            group by tm.user_id     ) tt where 1=1  >
2016-05-04 16:46:34,313 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getTotalUserOrderCount】，SQL语句为→     select * from (          select tm.user_id,                tm.account,                tm.name,                tm.visit_code,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.user_id,                  t.good_id,                  t.state,                        t2.account,                        t2.visit_code,                        t2.name,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1, wxb_memeber t2            where t.sku_id = t1.sku_id and t.user_id = t2.memeber_id                             ) tm where 1=1          ) tt where 1=1  >
2016-05-04 17:04:48,699 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getCustOrderCount.ct>
2016-05-04 17:04:48,710 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getCustOrderCount.ct>
2016-05-04 17:04:48,710 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 17:04:48,711 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 17:04:48,711 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getCustOrderCount.ct>
2016-05-04 17:04:48,711 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 17:04:48,711 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 17:04:48,711 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 17:04:48,711 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 17:04:51,750 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getUserOrderCount.ct>
2016-05-04 17:04:51,753 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getUserOrderCount.ct>
2016-05-04 17:04:51,753 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 17:04:51,753 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 17:04:51,753 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getUserOrderCount.ct>
2016-05-04 17:04:51,753 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 17:04:51,753 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 17:04:51,753 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 17:04:51,753 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 17:04:51,756 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserOrderCountList】，SQL语句为→     select * from (          select tm.user_id,                tm.account,                tm.name,                tm.visit_code,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.user_id,                  t.good_id,                  t.state,                        t2.account,                        t2.visit_code,                        t2.name,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1, wxb_memeber t2            where t.sku_id = t1.sku_id and t.user_id = t2.memeber_id                             ) tm where 1=1            group by tm.user_id     ) tt where 1=1  >
2016-05-04 17:04:56,463 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getUserOrderCount.ct>
2016-05-04 17:04:56,463 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getUserOrderCount.ct>
2016-05-04 17:04:56,463 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 17:04:56,463 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 17:04:56,464 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getUserOrderCount.ct>
2016-05-04 17:04:56,464 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 17:04:56,464 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 17:04:56,464 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 17:04:56,464 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 17:05:05,730 ERROR [org.apache.struts2.dispatcher.Dispatcher] - <Exception occurred during processing request: No result defined for action com.csmy.my.center.action.OrderInfoAction and result error>
No result defined for action com.csmy.my.center.action.OrderInfoAction and result error
	at com.opensymphony.xwork2.DefaultActionInvocation.executeResult(DefaultActionInvocation.java:373)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:275)
	at org.apache.struts2.interceptor.debugging.DebuggingInterceptor.intercept(DebuggingInterceptor.java:256)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.DefaultWorkflowInterceptor.doIntercept(DefaultWorkflowInterceptor.java:167)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.validator.ValidationInterceptor.doIntercept(ValidationInterceptor.java:265)
	at org.apache.struts2.interceptor.validation.AnnotationValidationInterceptor.doIntercept(AnnotationValidationInterceptor.java:68)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor.intercept(ConversionErrorInterceptor.java:138)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:239)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:239)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.intercept(StaticParametersInterceptor.java:191)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.MultiselectInterceptor.intercept(MultiselectInterceptor.java:73)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.CheckboxInterceptor.intercept(CheckboxInterceptor.java:91)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.FileUploadInterceptor.intercept(FileUploadInterceptor.java:252)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor.intercept(ModelDrivenInterceptor.java:100)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor.intercept(ScopedModelDrivenInterceptor.java:141)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ChainingInterceptor.intercept(ChainingInterceptor.java:145)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.PrepareInterceptor.doIntercept(PrepareInterceptor.java:171)
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:98)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.I18nInterceptor.intercept(I18nInterceptor.java:161)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.interceptor.ServletConfigInterceptor.intercept(ServletConfigInterceptor.java:164)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.AliasInterceptor.intercept(AliasInterceptor.java:193)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.intercept(ExceptionMappingInterceptor.java:189)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at com.csmy.my.center.filter.AuthorizationInterceptor.intercept(AuthorizationInterceptor.java:94)
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:246)
	at org.apache.struts2.impl.StrutsActionProxy.execute(StrutsActionProxy.java:54)
	at org.apache.struts2.dispatcher.Dispatcher.serviceAction(Dispatcher.java:563)
	at org.apache.struts2.dispatcher.ng.ExecuteOperations.executeAction(ExecuteOperations.java:77)
	at org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter.doFilter(StrutsPrepareAndExecuteFilter.java:99)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:501)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:170)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:98)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:950)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1040)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:607)
	at org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.doRun(AprEndpoint.java:2441)
	at org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.run(AprEndpoint.java:2430)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-05-04 17:05:08,190 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserOrderCountList】，SQL语句为→     select * from (          select tm.user_id,                tm.account,                tm.name,                tm.visit_code,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.user_id,                  t.good_id,                  t.state,                        t2.account,                        t2.visit_code,                        t2.name,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1, wxb_memeber t2            where t.sku_id = t1.sku_id and t.user_id = t2.memeber_id                             ) tm where 1=1            group by tm.user_id     ) tt where 1=1  >
2016-05-04 17:05:09,101 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserVisitMoneyCount】，SQL语句为→      select tn.jls, tn.zje, tn.ddfc, tn.yjfc, tn.sjfc    from (select count(tm.order_id) as jls,                 sum(tm.jg) as zje,                 sum(tm.fc) as ddfc,                 sum(tm.gms * tm.fc) * (0.08) as yjfc,                 sum(tm.gms * tm.jsfc) * (0.08) as sjfc            from (select t.order_id,                         t. buy_num as gms,                         t2. sku_price as jg,                         t2. sku_pmoney as fc,                         (select p.order_pmoney                            from wxb_order_count p                           where p.order_id = t.order_id                             and p.state_id = 3) as jsfc                    from wxb_order t, wxb_good_sku t2                   where t. sku_id = t2.sku_id                     and t.user_id in                         (select t1.memeber_id                            from wxb_memeber t1                           where t1. recom_user = 'jidu')) tm           where 1 = 1) tn   where 1 = 1    >
2016-05-04 17:05:09,662 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserVisitMoneyCount】，SQL语句为→      select tn.jls, tn.zje, tn.ddfc, tn.yjfc, tn.sjfc    from (select count(tm.order_id) as jls,                 sum(tm.jg) as zje,                 sum(tm.fc) as ddfc,                 sum(tm.gms * tm.fc) * (0.08) as yjfc,                 sum(tm.gms * tm.jsfc) * (0.08) as sjfc            from (select t.order_id,                         t. buy_num as gms,                         t2. sku_price as jg,                         t2. sku_pmoney as fc,                         (select p.order_pmoney                            from wxb_order_count p                           where p.order_id = t.order_id                             and p.state_id = 3) as jsfc                    from wxb_order t, wxb_good_sku t2                   where t. sku_id = t2.sku_id                     and t.user_id in                         (select t1.memeber_id                            from wxb_memeber t1                           where t1. recom_user = 'h86b')) tm           where 1 = 1) tn   where 1 = 1    >
2016-05-04 17:05:10,403 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserVisitMoneyCount】，SQL语句为→      select tn.jls, tn.zje, tn.ddfc, tn.yjfc, tn.sjfc    from (select count(tm.order_id) as jls,                 sum(tm.jg) as zje,                 sum(tm.fc) as ddfc,                 sum(tm.gms * tm.fc) * (0.08) as yjfc,                 sum(tm.gms * tm.jsfc) * (0.08) as sjfc            from (select t.order_id,                         t. buy_num as gms,                         t2. sku_price as jg,                         t2. sku_pmoney as fc,                         (select p.order_pmoney                            from wxb_order_count p                           where p.order_id = t.order_id                             and p.state_id = 3) as jsfc                    from wxb_order t, wxb_good_sku t2                   where t. sku_id = t2.sku_id                     and t.user_id in                         (select t1.memeber_id                            from wxb_memeber t1                           where t1. recom_user = 'lfge')) tm           where 1 = 1) tn   where 1 = 1    >
2016-05-04 17:05:10,931 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserOrderCountListCount】，SQL语句为→      select count(*) as cnt from (          select tm.user_id,                tm.account,                tm.name,                tm.visit_code,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.user_id,                  t.good_id,                  t.state,                        t2.account,                        t2.visit_code,                        t2.name,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1, wxb_memeber t2            where t.sku_id = t1.sku_id and t.user_id = t2.memeber_id                             ) tm where 1=1            group by tm.user_id     ) tt where 1=1  >
2016-05-04 17:05:11,668 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getTotalUserOrderCount】，SQL语句为→     select * from (          select tm.user_id,                tm.account,                tm.name,                tm.visit_code,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.user_id,                  t.good_id,                  t.state,                        t2.account,                        t2.visit_code,                        t2.name,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1, wxb_memeber t2            where t.sku_id = t1.sku_id and t.user_id = t2.memeber_id                             ) tm where 1=1          ) tt where 1=1  >
2016-05-04 17:30:12,132 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getCustOrderCount.ct>
2016-05-04 17:30:12,133 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getCustOrderCount.ct>
2016-05-04 17:30:12,134 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 17:30:12,134 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 17:30:12,134 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getCustOrderCount.ct>
2016-05-04 17:30:12,134 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 17:30:12,134 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 17:30:12,134 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 17:30:12,134 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 17:31:09,422 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getCustOrderCount.ct>
2016-05-04 17:31:09,423 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getCustOrderCount.ct>
2016-05-04 17:31:09,423 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 17:31:09,423 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 17:31:09,423 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getCustOrderCount.ct>
2016-05-04 17:31:09,423 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 17:31:09,423 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 17:31:09,423 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 17:31:09,423 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 17:31:09,428 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getCustOrderCountList】，SQL语句为→     select * from (         select tm.customer_id,                tm.customer_name,                tm.login_name,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.good_id,                        t2.customer_id,                        t3.customer_name,                        t3.login_name,                  t.state,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1,wxb_good t2,wxb_customer t3            where t.sku_id = t1.sku_id                   and t.good_id = t2.good_id                   and t2.customer_id = t3.customer_id                          ) tm where 1=1            group by tm.customer_id     ) tt where 1=1  >
2016-05-04 17:31:09,819 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getCustOrderCountListCount】，SQL语句为→      select count(*) as cnt from (         select tm.customer_id,                tm.customer_name,                tm.login_name,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.good_id,                        t2.customer_id,                        t3.customer_name,                        t3.login_name,                  t.state,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1,wxb_good t2,wxb_customer t3            where t.sku_id = t1.sku_id                   and t.good_id = t2.good_id                   and t2.customer_id = t3.customer_id                          ) tm where 1=1            group by tm.customer_id     ) tt where 1=1  >
2016-05-04 17:31:10,145 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getTotalCustOrderCount】，SQL语句为→     select * from (         select tm.customer_id,                tm.customer_name,                tm.login_name,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.good_id,                        t2.customer_id,                        t3.customer_name,                        t3.login_name,                  t.state,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1,wxb_good t2,wxb_customer t3            where t.sku_id = t1.sku_id                   and t.good_id = t2.good_id                   and t2.customer_id = t3.customer_id                          ) tm where 1=1          ) tt where 1=1  >
2016-05-04 17:44:35,899 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getCustOrderCount.ct>
2016-05-04 17:44:35,900 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getCustOrderCount.ct>
2016-05-04 17:44:35,900 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 17:44:35,900 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 17:44:35,901 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getCustOrderCount.ct>
2016-05-04 17:44:35,901 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 17:44:35,901 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 17:44:35,901 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 17:44:35,901 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 17:44:35,904 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getCustOrderCountList】，SQL语句为→     select * from (         select tm.customer_id,                tm.customer_name,                tm.login_name,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.good_id,                        t2.customer_id,                        t3.customer_name,                        t3.login_name,                  t.state,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1,wxb_good t2,wxb_customer t3            where t.sku_id = t1.sku_id                   and t.good_id = t2.good_id                   and t2.customer_id = t3.customer_id                          ) tm where 1=1            group by tm.customer_id     ) tt where 1=1  >
2016-05-04 17:44:36,135 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getCustOrderCountListCount】，SQL语句为→      select count(*) as cnt from (         select tm.customer_id,                tm.customer_name,                tm.login_name,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.good_id,                        t2.customer_id,                        t3.customer_name,                        t3.login_name,                  t.state,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1,wxb_good t2,wxb_customer t3            where t.sku_id = t1.sku_id                   and t.good_id = t2.good_id                   and t2.customer_id = t3.customer_id                          ) tm where 1=1            group by tm.customer_id     ) tt where 1=1  >
2016-05-04 17:44:36,348 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getTotalCustOrderCount】，SQL语句为→     select * from (         select tm.customer_id,                tm.customer_name,                tm.login_name,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.good_id,                        t2.customer_id,                        t3.customer_name,                        t3.login_name,                  t.state,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1,wxb_good t2,wxb_customer t3            where t.sku_id = t1.sku_id                   and t.good_id = t2.good_id                   and t2.customer_id = t3.customer_id                          ) tm where 1=1          ) tt where 1=1  >
2016-05-04 17:47:04,179 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getCustOrderCount.ct>
2016-05-04 17:47:04,180 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getCustOrderCount.ct>
2016-05-04 17:47:04,180 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 17:47:04,180 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 17:47:04,180 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getCustOrderCount.ct>
2016-05-04 17:47:04,181 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 17:47:04,181 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 17:47:04,181 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 17:47:04,181 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 17:47:04,187 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getCustOrderCountList】，SQL语句为→     select * from (         select tm.customer_id,                tm.customer_name,                tm.login_name,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.good_id,                        t2.customer_id,                        t3.customer_name,                        t3.login_name,                  t.state,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1,wxb_good t2,wxb_customer t3            where t.sku_id = t1.sku_id                   and t.good_id = t2.good_id                   and t2.customer_id = t3.customer_id                          ) tm where 1=1            group by tm.customer_id     ) tt where 1=1  >
2016-05-04 17:47:04,419 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getCustOrderCountListCount】，SQL语句为→      select count(*) as cnt from (         select tm.customer_id,                tm.customer_name,                tm.login_name,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.good_id,                        t2.customer_id,                        t3.customer_name,                        t3.login_name,                  t.state,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1,wxb_good t2,wxb_customer t3            where t.sku_id = t1.sku_id                   and t.good_id = t2.good_id                   and t2.customer_id = t3.customer_id                          ) tm where 1=1            group by tm.customer_id     ) tt where 1=1  >
2016-05-04 17:47:04,625 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getTotalCustOrderCount】，SQL语句为→     select * from (         select tm.customer_id,                tm.customer_name,                tm.login_name,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.good_id,                        t2.customer_id,                        t3.customer_name,                        t3.login_name,                  t.state,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1,wxb_good t2,wxb_customer t3            where t.sku_id = t1.sku_id                   and t.good_id = t2.good_id                   and t2.customer_id = t3.customer_id                          ) tm where 1=1          ) tt where 1=1  >
2016-05-04 17:47:15,003 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getGoodOrderCount.ct>
2016-05-04 17:47:15,032 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getGoodOrderCount.ct>
2016-05-04 17:47:15,032 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 17:47:15,032 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 17:47:15,032 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getGoodOrderCount.ct>
2016-05-04 17:47:15,032 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 17:47:15,032 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 17:47:15,032 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 17:47:15,032 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 17:49:47,239 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getGoodOrderCount.ct>
2016-05-04 17:49:47,239 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getGoodOrderCount.ct>
2016-05-04 17:49:47,239 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 17:49:47,239 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 17:49:47,239 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getGoodOrderCount.ct>
2016-05-04 17:49:47,239 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 17:49:47,240 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 17:49:47,240 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 17:49:47,240 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 17:49:48,173 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getCustOrderCount.ct>
2016-05-04 17:49:48,219 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getCustOrderCount.ct>
2016-05-04 17:49:48,219 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 17:49:48,219 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 17:49:48,219 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getCustOrderCount.ct>
2016-05-04 17:49:48,219 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 17:49:48,219 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 17:49:48,219 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 17:49:48,219 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 17:49:48,221 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getCustOrderCountList】，SQL语句为→     select * from (         select tm.customer_id,                tm.customer_name,                tm.login_name,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.good_id,                        t2.customer_id,                        t3.customer_name,                        t3.login_name,                  t.state,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1,wxb_good t2,wxb_customer t3            where t.sku_id = t1.sku_id                   and t.good_id = t2.good_id                   and t2.customer_id = t3.customer_id                          ) tm where 1=1            group by tm.customer_id     ) tt where 1=1  >
2016-05-04 17:49:48,433 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getCustOrderCountListCount】，SQL语句为→      select count(*) as cnt from (         select tm.customer_id,                tm.customer_name,                tm.login_name,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.good_id,                        t2.customer_id,                        t3.customer_name,                        t3.login_name,                  t.state,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1,wxb_good t2,wxb_customer t3            where t.sku_id = t1.sku_id                   and t.good_id = t2.good_id                   and t2.customer_id = t3.customer_id                          ) tm where 1=1            group by tm.customer_id     ) tt where 1=1  >
2016-05-04 17:49:48,647 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getTotalCustOrderCount】，SQL语句为→     select * from (         select tm.customer_id,                tm.customer_name,                tm.login_name,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.good_id,                        t2.customer_id,                        t3.customer_name,                        t3.login_name,                  t.state,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1,wxb_good t2,wxb_customer t3            where t.sku_id = t1.sku_id                   and t.good_id = t2.good_id                   and t2.customer_id = t3.customer_id                          ) tm where 1=1          ) tt where 1=1  >
2016-05-04 17:49:50,730 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getGoodOrderCount.ct>
2016-05-04 17:49:50,755 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getGoodOrderCount.ct>
2016-05-04 17:49:50,755 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 17:49:50,755 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 17:49:50,755 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getGoodOrderCount.ct>
2016-05-04 17:49:50,755 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 17:49:50,755 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 17:49:50,756 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 17:49:50,756 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 17:51:57,449 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getCustOrderCount.ct>
2016-05-04 17:51:57,450 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getCustOrderCount.ct>
2016-05-04 17:51:57,450 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 17:51:57,450 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 17:51:57,450 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getCustOrderCount.ct>
2016-05-04 17:51:57,450 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 17:51:57,450 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 17:51:57,450 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 17:51:57,450 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 17:51:57,454 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getCustOrderCountList】，SQL语句为→     select * from (         select tm.customer_id,                tm.customer_name,                tm.login_name,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.good_id,                        t2.customer_id,                        t3.customer_name,                        t3.login_name,                  t.state,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1,wxb_good t2,wxb_customer t3            where t.sku_id = t1.sku_id                   and t.good_id = t2.good_id                   and t2.customer_id = t3.customer_id                          ) tm where 1=1            group by tm.customer_id     ) tt where 1=1  >
2016-05-04 17:51:57,701 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getCustOrderCountListCount】，SQL语句为→      select count(*) as cnt from (         select tm.customer_id,                tm.customer_name,                tm.login_name,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.good_id,                        t2.customer_id,                        t3.customer_name,                        t3.login_name,                  t.state,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1,wxb_good t2,wxb_customer t3            where t.sku_id = t1.sku_id                   and t.good_id = t2.good_id                   and t2.customer_id = t3.customer_id                          ) tm where 1=1            group by tm.customer_id     ) tt where 1=1  >
2016-05-04 17:51:57,919 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getTotalCustOrderCount】，SQL语句为→     select * from (         select tm.customer_id,                tm.customer_name,                tm.login_name,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.good_id,                        t2.customer_id,                        t3.customer_name,                        t3.login_name,                  t.state,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1,wxb_good t2,wxb_customer t3            where t.sku_id = t1.sku_id                   and t.good_id = t2.good_id                   and t2.customer_id = t3.customer_id                          ) tm where 1=1          ) tt where 1=1  >
2016-05-04 17:52:00,591 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getUserOrderCount.ct>
2016-05-04 17:52:00,634 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getUserOrderCount.ct>
2016-05-04 17:52:00,634 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 17:52:00,634 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 17:52:00,634 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getUserOrderCount.ct>
2016-05-04 17:52:00,634 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 17:52:00,634 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 17:52:00,634 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 17:52:00,634 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 17:52:00,636 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserOrderCountList】，SQL语句为→     select * from (          select tm.user_id,                tm.account,                tm.name,                tm.visit_code,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.user_id,                  t.good_id,                  t.state,                        t2.account,                        t2.visit_code,                        t2.name,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1, wxb_memeber t2            where t.sku_id = t1.sku_id and t.user_id = t2.memeber_id                             ) tm where 1=1            group by tm.user_id     ) tt where 1=1  >
2016-05-04 17:52:00,939 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserVisitMoneyCount】，SQL语句为→      select tn.jls, tn.zje, tn.ddfc, tn.yjfc, tn.sjfc    from (select count(tm.order_id) as jls,                 sum(tm.jg) as zje,                 sum(tm.fc) as ddfc,                 sum(tm.gms * tm.fc) * (0.08) as yjfc,                 sum(tm.gms * tm.jsfc) * (0.08) as sjfc            from (select t.order_id,                         t. buy_num as gms,                         t2. sku_price as jg,                         t2. sku_pmoney as fc,                         (select p.order_pmoney                            from wxb_order_count p                           where p.order_id = t.order_id                             and p.state_id = 3) as jsfc                    from wxb_order t, wxb_good_sku t2                   where t. sku_id = t2.sku_id                     and t.user_id in                         (select t1.memeber_id                            from wxb_memeber t1                           where t1. recom_user = 'jidu')) tm           where 1 = 1) tn   where 1 = 1    >
2016-05-04 17:52:01,184 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserVisitMoneyCount】，SQL语句为→      select tn.jls, tn.zje, tn.ddfc, tn.yjfc, tn.sjfc    from (select count(tm.order_id) as jls,                 sum(tm.jg) as zje,                 sum(tm.fc) as ddfc,                 sum(tm.gms * tm.fc) * (0.08) as yjfc,                 sum(tm.gms * tm.jsfc) * (0.08) as sjfc            from (select t.order_id,                         t. buy_num as gms,                         t2. sku_price as jg,                         t2. sku_pmoney as fc,                         (select p.order_pmoney                            from wxb_order_count p                           where p.order_id = t.order_id                             and p.state_id = 3) as jsfc                    from wxb_order t, wxb_good_sku t2                   where t. sku_id = t2.sku_id                     and t.user_id in                         (select t1.memeber_id                            from wxb_memeber t1                           where t1. recom_user = 'h86b')) tm           where 1 = 1) tn   where 1 = 1    >
2016-05-04 17:52:01,397 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserVisitMoneyCount】，SQL语句为→      select tn.jls, tn.zje, tn.ddfc, tn.yjfc, tn.sjfc    from (select count(tm.order_id) as jls,                 sum(tm.jg) as zje,                 sum(tm.fc) as ddfc,                 sum(tm.gms * tm.fc) * (0.08) as yjfc,                 sum(tm.gms * tm.jsfc) * (0.08) as sjfc            from (select t.order_id,                         t. buy_num as gms,                         t2. sku_price as jg,                         t2. sku_pmoney as fc,                         (select p.order_pmoney                            from wxb_order_count p                           where p.order_id = t.order_id                             and p.state_id = 3) as jsfc                    from wxb_order t, wxb_good_sku t2                   where t. sku_id = t2.sku_id                     and t.user_id in                         (select t1.memeber_id                            from wxb_memeber t1                           where t1. recom_user = 'lfge')) tm           where 1 = 1) tn   where 1 = 1    >
2016-05-04 17:52:01,593 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserOrderCountListCount】，SQL语句为→      select count(*) as cnt from (          select tm.user_id,                tm.account,                tm.name,                tm.visit_code,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.user_id,                  t.good_id,                  t.state,                        t2.account,                        t2.visit_code,                        t2.name,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1, wxb_memeber t2            where t.sku_id = t1.sku_id and t.user_id = t2.memeber_id                             ) tm where 1=1            group by tm.user_id     ) tt where 1=1  >
2016-05-04 17:52:01,898 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getTotalUserOrderCount】，SQL语句为→     select * from (          select tm.user_id,                tm.account,                tm.name,                tm.visit_code,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.user_id,                  t.good_id,                  t.state,                        t2.account,                        t2.visit_code,                        t2.name,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1, wxb_memeber t2            where t.sku_id = t1.sku_id and t.user_id = t2.memeber_id                             ) tm where 1=1          ) tt where 1=1  >
2016-05-04 17:52:02,766 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getUserOrderCount.ct>
2016-05-04 17:52:02,768 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getUserOrderCount.ct>
2016-05-04 17:52:02,768 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 17:52:02,768 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 17:52:02,768 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getUserOrderCount.ct>
2016-05-04 17:52:02,768 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 17:52:02,768 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 17:52:02,768 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 17:52:02,769 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 17:52:02,771 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserOrderCountList】，SQL语句为→     select * from (          select tm.user_id,                tm.account,                tm.name,                tm.visit_code,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.user_id,                  t.good_id,                  t.state,                        t2.account,                        t2.visit_code,                        t2.name,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1, wxb_memeber t2            where t.sku_id = t1.sku_id and t.user_id = t2.memeber_id                             ) tm where 1=1            group by tm.user_id     ) tt where 1=1  >
2016-05-04 17:52:03,135 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserVisitMoneyCount】，SQL语句为→      select tn.jls, tn.zje, tn.ddfc, tn.yjfc, tn.sjfc    from (select count(tm.order_id) as jls,                 sum(tm.jg) as zje,                 sum(tm.fc) as ddfc,                 sum(tm.gms * tm.fc) * (0.08) as yjfc,                 sum(tm.gms * tm.jsfc) * (0.08) as sjfc            from (select t.order_id,                         t. buy_num as gms,                         t2. sku_price as jg,                         t2. sku_pmoney as fc,                         (select p.order_pmoney                            from wxb_order_count p                           where p.order_id = t.order_id                             and p.state_id = 3) as jsfc                    from wxb_order t, wxb_good_sku t2                   where t. sku_id = t2.sku_id                     and t.user_id in                         (select t1.memeber_id                            from wxb_memeber t1                           where t1. recom_user = 'jidu')) tm           where 1 = 1) tn   where 1 = 1    >
2016-05-04 17:52:03,418 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserVisitMoneyCount】，SQL语句为→      select tn.jls, tn.zje, tn.ddfc, tn.yjfc, tn.sjfc    from (select count(tm.order_id) as jls,                 sum(tm.jg) as zje,                 sum(tm.fc) as ddfc,                 sum(tm.gms * tm.fc) * (0.08) as yjfc,                 sum(tm.gms * tm.jsfc) * (0.08) as sjfc            from (select t.order_id,                         t. buy_num as gms,                         t2. sku_price as jg,                         t2. sku_pmoney as fc,                         (select p.order_pmoney                            from wxb_order_count p                           where p.order_id = t.order_id                             and p.state_id = 3) as jsfc                    from wxb_order t, wxb_good_sku t2                   where t. sku_id = t2.sku_id                     and t.user_id in                         (select t1.memeber_id                            from wxb_memeber t1                           where t1. recom_user = 'h86b')) tm           where 1 = 1) tn   where 1 = 1    >
2016-05-04 17:52:03,627 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserVisitMoneyCount】，SQL语句为→      select tn.jls, tn.zje, tn.ddfc, tn.yjfc, tn.sjfc    from (select count(tm.order_id) as jls,                 sum(tm.jg) as zje,                 sum(tm.fc) as ddfc,                 sum(tm.gms * tm.fc) * (0.08) as yjfc,                 sum(tm.gms * tm.jsfc) * (0.08) as sjfc            from (select t.order_id,                         t. buy_num as gms,                         t2. sku_price as jg,                         t2. sku_pmoney as fc,                         (select p.order_pmoney                            from wxb_order_count p                           where p.order_id = t.order_id                             and p.state_id = 3) as jsfc                    from wxb_order t, wxb_good_sku t2                   where t. sku_id = t2.sku_id                     and t.user_id in                         (select t1.memeber_id                            from wxb_memeber t1                           where t1. recom_user = 'lfge')) tm           where 1 = 1) tn   where 1 = 1    >
2016-05-04 17:52:03,843 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getUserOrderCountListCount】，SQL语句为→      select count(*) as cnt from (          select tm.user_id,                tm.account,                tm.name,                tm.visit_code,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.user_id,                  t.good_id,                  t.state,                        t2.account,                        t2.visit_code,                        t2.name,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1, wxb_memeber t2            where t.sku_id = t1.sku_id and t.user_id = t2.memeber_id                             ) tm where 1=1            group by tm.user_id     ) tt where 1=1  >
2016-05-04 17:52:04,174 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getTotalUserOrderCount】，SQL语句为→     select * from (          select tm.user_id,                tm.account,                tm.name,                tm.visit_code,                count(tm.order_id) as zds,          sum(tm.zjg) as zje,          sum(tm.zfc) as zfc,          sum(tm.xd) as xds,          sum(tm.xdjg) as xdjg,          sum(tm.xdfc) as xdfc,          sum(tm.df) as dfs,          sum(tm.dfjg) as dfjg,          sum(tm.dffc) as dffc,          sum(tm.qx) as qxs,          sum(tm.qxjg) as qxjg,          sum(tm.qxfc) as qxfc,          sum(tm.dq) as dqs,          sum(tm.dqjg) as dqjg,          sum(tm.dqfc) as dqfc,          sum(tm.yf) as yfs,          sum(tm.yfjg) as yfjg,          sum(tm.yffc) as yffc,          sum(tm.js) as jss,          sum(tm.jsjg) as jsjg,          sum(tm.jsfc) as jsfc,          sum(tm.qs) as qss,          sum(tm.qsjg) as qsjg,          sum(tm.qsfc) as qsfc,          count(tm.yjsd) as yjsds,          sum(tm.yjsdjg) as yjsdjg,          sum(tm.yjsdfc) as yjsdfc,          sum(tm.th) as ths,          sum(tm.thjg) as thjg,          sum(tm.thfc) as thfc          from (select t.order_id,                  t1.sku_price * t.buy_num as zjg,                  t1.sku_pmoney * t.buy_num as zfc,                  t.user_id,                  t.good_id,                  t.state,                        t2.account,                        t2.visit_code,                        t2.name,                  case t.state when 1 then 1 else 0 end as xd,                  case t.state when 1 then t1.sku_price * t.buy_num else 0 end as xdjg,                  case t.state when 1 then t1.sku_pmoney * t.buy_num else 0 end as xdfc,                  case t.state when 2 then 1 else 0 end as df,                  case t.state when 2 then t1.sku_price * t.buy_num else 0 end as dfjg,                  case t.state when 2 then t1.sku_pmoney * t.buy_num else 0 end as dffc,                  case t.state when 3 then 1 else 0 end as qx,                  case t.state when 3 then t1.sku_price * t.buy_num else 0 end as qxjg,                  case t.state when 3 then t1.sku_pmoney * t.buy_num else 0 end as qxfc,                  case t.state when 4 then 1 else 0 end as yf,                  case t.state when 4 then t1.sku_price * t.buy_num else 0 end as yfjg,                  case t.state when 4 then t1.sku_pmoney * t.buy_num else 0 end as yffc,                  case t.state when 5 then 1 else 0 end as dq,                  case t.state when 5 then t1.sku_price * t.buy_num else 0 end as dqjg,                  case t.state when 5 then t1.sku_pmoney * t.buy_num else 0 end as dqfc,                  case t.state when 6 then 1 else 0 end as js,                  case t.state when 6 then t1.sku_price * t.buy_num else 0 end as jsjg,                  case t.state when 6 then t1.sku_pmoney * t.buy_num else 0 end as jsfc,                  case t.state when 7 then 1 else 0 end as qs,                  case t.state when 7 then t1.sku_price * t.buy_num else 0 end as qsjg,                  case t.state when 7 then t1.sku_pmoney * t.buy_num else 0 end as qsfc,                  (select o.order_id from wxb_order_count o where o.order_id = t.order_id and o.state_id = 3) as yjsd,                  (select p.order_money from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdjg,                  (select p.order_pmoney from wxb_order_count p where p.order_id = t.order_id and p.state_id = 3) as yjsdfc,                  case t.state when 8 then 1 else 0 end as th,                  case t.state when 8 then t1.sku_price * t.buy_num else 0 end as thjg,                  case t.state when 8 then t1.sku_pmoney * t.buy_num else 0 end as thfc              from wxb_order t, wxb_good_sku t1, wxb_memeber t2            where t.sku_id = t1.sku_id and t.user_id = t2.memeber_id                             ) tm where 1=1          ) tt where 1=1  >
2016-05-04 17:52:04,728 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:resource!getVisitCount.ct>
2016-05-04 17:52:04,743 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/resource!getVisitCount.ct>
2016-05-04 17:52:04,743 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 17:52:04,743 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 17:52:04,743 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/resource!getVisitCount.ct>
2016-05-04 17:52:04,743 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 17:52:04,743 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 17:52:04,743 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 17:52:04,743 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 17:52:04,804 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getVisitIPCount】，SQL语句为→     select count(*) as cnt from wxb_visit_log t where 1=1        >
2016-05-04 17:52:04,901 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getVisitOrderCount】，SQL语句为→     select count(*) as cnt from wxb_order t where 1=1        >
2016-05-04 17:52:04,991 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getVisitIPCount】，SQL语句为→     select count(*) as cnt from wxb_visit_log t where 1=1   and   t. visit_time >= '2016-05-04 00:00:00'      and   t. visit_time <= '2016-05-04 23:59:59'     >
2016-05-04 17:52:05,065 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getVisitOrderCount】，SQL语句为→     select count(*) as cnt from wxb_order t where 1=1   and   t. order_time >= '2016-05-04 00:00:00'      and   t. order_time <= '2016-05-04 23:59:59'     >
2016-05-04 17:52:05,160 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getVisitIPCount】，SQL语句为→     select count(*) as cnt from wxb_visit_log t where 1=1   and   t. visit_time >= '2016-04-27 00:00:00'      and   t. visit_time <= '2016-05-04 23:59:59'     >
2016-05-04 17:52:05,274 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getVisitOrderCount】，SQL语句为→     select count(*) as cnt from wxb_order t where 1=1   and   t. order_time >= '2016-04-27 00:00:00'      and   t. order_time <= '2016-05-04 23:59:59'     >
2016-05-04 17:52:05,387 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getVisitIPCount】，SQL语句为→     select count(*) as cnt from wxb_visit_log t where 1=1   and   t. visit_time >= '2016-04-04 00:00:00'      and   t. visit_time <= '2016-05-04 23:59:59'     >
2016-05-04 17:52:05,481 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=order.getVisitOrderCount】，SQL语句为→     select count(*) as cnt from wxb_order t where 1=1   and   t. order_time >= '2016-04-04 00:00:00'      and   t. order_time <= '2016-05-04 23:59:59'     >
2016-05-04 17:55:30,911 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:login!loginOut.ct>
2016-05-04 17:55:30,984 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/login!loginOut.ct>
2016-05-04 17:55:30,984 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 17:55:30,984 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 17:55:30,984 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/login!loginOut.ct>
2016-05-04 17:55:30,984 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 17:55:30,985 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 17:55:30,985 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 17:55:30,985 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 17:55:46,147 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:login!userLogin.ct>
2016-05-04 17:55:46,148 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/login!userLogin.ct>
2016-05-04 17:55:46,148 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 17:55:46,148 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 17:55:46,148 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/login!userLogin.ct>
2016-05-04 17:55:46,148 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 17:55:46,148 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 17:55:46,148 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 17:55:46,148 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 17:55:46,150 ERROR [com.csmy.my.center.dao.UserInfoDao] - <执行【sqlname=admin.getUserByAcount】，SQL语句为→      select * from user_info t where 1=1      and              t.account='super'                 and              t.password='N3+xc2l9eaQ='                   >
2016-05-04 17:55:46,223 ERROR [com.csmy.my.center.dao.UserInfoDao] - <执行【sqlname=admin.getUserExtendInfoById】，SQL语句为→      select * from user_exp_info t where 1=1      and              t.user_id='23946449'              >
2016-05-04 17:55:46,924 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:index!getMainLeftTree.ct>
2016-05-04 17:55:46,924 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/index!getMainLeftTree.ct>
2016-05-04 17:55:46,924 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 17:55:46,924 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 17:55:46,924 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/index!getMainLeftTree.ct>
2016-05-04 17:55:46,924 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 17:55:46,924 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 17:55:46,924 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 17:55:46,925 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 17:55:46,952 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=role.getAllRolePermits】，SQL语句为→         select *     from sys_module m    where m. module_code in          (select distinct t. module_id from sys_role_fun t where t.role_id in ('57414897'))          order by m.module_order asc     >
2016-05-04 17:55:52,508 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:user!getRoleInfo.ct>
2016-05-04 17:55:52,509 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/user!getRoleInfo.ct>
2016-05-04 17:55:52,509 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 17:55:52,509 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 17:55:52,509 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/user!getRoleInfo.ct>
2016-05-04 17:55:52,509 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 17:55:52,509 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 17:55:52,509 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 17:55:52,509 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 17:55:52,512 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=role.getSystemRole】，SQL语句为→     select * from (            select     t1.role_code,    t1.role_name,    t1.role_type,    t1.role_order,    t1.role_desc     from sys_role t1 where 1=1                          order by t1.role_order asc       ) tt where 1=1  >
2016-05-04 17:55:52,620 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=role.getSystemRoleCount】，SQL语句为→    select count(*) as cnt from (             select     t1.role_code,    t1.role_name,    t1.role_type,    t1.role_order,    t1.role_desc     from sys_role t1 where 1=1                          order by t1.role_order asc       ) tt where 1=1  >
2016-05-04 17:55:54,861 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:user!setRolePermit.ct>
2016-05-04 17:55:54,861 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/user!setRolePermit.ct>
2016-05-04 17:55:54,862 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 17:55:54,862 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 17:55:54,862 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/user!setRolePermit.ct>
2016-05-04 17:55:54,862 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 17:55:54,862 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 17:55:54,862 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 17:55:54,862 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 17:55:54,867 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=role.getRolePermits】，SQL语句为→         select *     from sys_module m    where m. module_code in          (select t. module_id from sys_role_fun t where t.role_id = '57414897')          order by m.module_order asc     >
2016-05-04 17:55:54,981 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=role.getAllSystemPermits】，SQL语句为→         select * from sys_module m where 1=1     >
2016-05-04 17:56:23,042 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:login!loginOut.ct>
2016-05-04 17:56:23,042 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/login!loginOut.ct>
2016-05-04 17:56:23,043 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 17:56:23,043 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 17:56:23,043 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/login!loginOut.ct>
2016-05-04 17:56:23,043 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 17:56:23,043 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 17:56:23,043 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 17:56:23,043 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 17:56:29,633 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:login!userLogin.ct>
2016-05-04 17:56:29,633 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/login!userLogin.ct>
2016-05-04 17:56:29,633 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 17:56:29,634 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 17:56:29,634 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/login!userLogin.ct>
2016-05-04 17:56:29,634 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 17:56:29,634 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 17:56:29,634 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 17:56:29,634 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 17:56:29,650 ERROR [com.csmy.my.center.dao.UserInfoDao] - <执行【sqlname=admin.getUserByAcount】，SQL语句为→      select * from user_info t where 1=1      and              t.account='admin'                 and              t.password='nbgYr0DpdB8='                   >
2016-05-04 17:56:29,724 ERROR [com.csmy.my.center.dao.UserInfoDao] - <执行【sqlname=admin.getUserExtendInfoById】，SQL语句为→      select * from user_exp_info t where 1=1      and              t.user_id='38521035'              >
2016-05-04 17:56:30,433 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:index!getMainLeftTree.ct>
2016-05-04 17:56:30,433 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/index!getMainLeftTree.ct>
2016-05-04 17:56:30,434 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 17:56:30,434 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 17:56:30,434 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/index!getMainLeftTree.ct>
2016-05-04 17:56:30,434 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 17:56:30,434 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 17:56:30,434 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 17:56:30,434 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 17:56:30,444 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=role.getAllRolePermits】，SQL语句为→         select *     from sys_module m    where m. module_code in          (select distinct t. module_id from sys_role_fun t where t.role_id in ('57414897'))          order by m.module_order asc     >
2016-05-04 17:59:40,876 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:login!loginOut.ct>
2016-05-04 17:59:40,876 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/login!loginOut.ct>
2016-05-04 17:59:40,876 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 17:59:40,876 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 17:59:40,876 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/login!loginOut.ct>
2016-05-04 17:59:40,876 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 17:59:40,876 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 17:59:40,876 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 17:59:40,876 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 17:59:57,376 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:login!userLogin.ct>
2016-05-04 17:59:57,376 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/login!userLogin.ct>
2016-05-04 17:59:57,377 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 17:59:57,377 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 17:59:57,377 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/login!userLogin.ct>
2016-05-04 17:59:57,377 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 17:59:57,377 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 17:59:57,377 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 17:59:57,378 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 17:59:57,381 ERROR [com.csmy.my.center.dao.UserInfoDao] - <执行【sqlname=admin.getUserByAcount】，SQL语句为→      select * from user_info t where 1=1      and              t.account='super'                 and              t.password='N3+xc2l9eaQ='                   >
2016-05-04 17:59:57,471 ERROR [com.csmy.my.center.dao.UserInfoDao] - <执行【sqlname=admin.getUserExtendInfoById】，SQL语句为→      select * from user_exp_info t where 1=1      and              t.user_id='23946449'              >
2016-05-04 17:59:58,161 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:index!getMainLeftTree.ct>
2016-05-04 17:59:58,161 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/index!getMainLeftTree.ct>
2016-05-04 17:59:58,161 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 17:59:58,161 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 17:59:58,161 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/index!getMainLeftTree.ct>
2016-05-04 17:59:58,161 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 17:59:58,161 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 17:59:58,162 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 17:59:58,162 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 17:59:58,168 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=role.getAllRolePermits】，SQL语句为→         select *     from sys_module m    where m. module_code in          (select distinct t. module_id from sys_role_fun t where t.role_id in ('57414897'))          order by m.module_order asc     >
2016-05-04 18:00:03,230 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:user!getRoleInfo.ct>
2016-05-04 18:00:03,231 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/user!getRoleInfo.ct>
2016-05-04 18:00:03,231 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 18:00:03,231 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 18:00:03,231 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/user!getRoleInfo.ct>
2016-05-04 18:00:03,231 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 18:00:03,231 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 18:00:03,231 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 18:00:03,231 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 18:00:03,233 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=role.getSystemRole】，SQL语句为→     select * from (            select     t1.role_code,    t1.role_name,    t1.role_type,    t1.role_order,    t1.role_desc     from sys_role t1 where 1=1                          order by t1.role_order asc       ) tt where 1=1  >
2016-05-04 18:00:03,330 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=role.getSystemRoleCount】，SQL语句为→    select count(*) as cnt from (             select     t1.role_code,    t1.role_name,    t1.role_type,    t1.role_order,    t1.role_desc     from sys_role t1 where 1=1                          order by t1.role_order asc       ) tt where 1=1  >
2016-05-04 18:00:05,813 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:user!setRolePermit.ct>
2016-05-04 18:00:05,813 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/user!setRolePermit.ct>
2016-05-04 18:00:05,813 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 18:00:05,813 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 18:00:05,813 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/user!setRolePermit.ct>
2016-05-04 18:00:05,813 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 18:00:05,814 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 18:00:05,814 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 18:00:05,814 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 18:00:05,816 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=role.getRolePermits】，SQL语句为→         select *     from sys_module m    where m. module_code in          (select t. module_id from sys_role_fun t where t.role_id = '57414897')          order by m.module_order asc     >
2016-05-04 18:00:05,943 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=role.getAllSystemPermits】，SQL语句为→         select * from sys_module m where 1=1     >
2016-05-04 18:00:13,796 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:user!operRoleInfo.ct>
2016-05-04 18:00:13,796 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/user!operRoleInfo.ct>
2016-05-04 18:00:13,796 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 18:00:13,797 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 18:00:13,797 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/user!operRoleInfo.ct>
2016-05-04 18:00:13,797 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:XMLHttpRequest>
2016-05-04 18:00:13,797 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 18:00:13,797 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 18:00:13,797 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 18:00:13,812 ERROR [com.csmy.my.center.dao.UserInfoDao] - <执行【sqlname=role.getRolePermits】，SQL语句为→         select *     from sys_module m    where m. module_code in          (select t. module_id from sys_role_fun t where t.role_id = '57414897')          order by m.module_order asc     >
2016-05-04 18:00:13,915 ERROR [com.csmy.my.center.dao.UserInfoDao] - <执行【sqlname=role.deleteRolePermits】，SQL语句为→     delete from sys_role_fun where role_id ='57414897' and module_id in ('01010305')  >
2016-05-04 18:00:15,046 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:user!getRoleInfo.ct>
2016-05-04 18:00:15,047 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/user!getRoleInfo.ct>
2016-05-04 18:00:15,047 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 18:00:15,047 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 18:00:15,047 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/user!getRoleInfo.ct>
2016-05-04 18:00:15,047 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 18:00:15,047 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 18:00:15,047 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 18:00:15,048 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 18:00:15,051 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=role.getSystemRole】，SQL语句为→     select * from (            select     t1.role_code,    t1.role_name,    t1.role_type,    t1.role_order,    t1.role_desc     from sys_role t1 where 1=1                          order by t1.role_order asc       ) tt where 1=1  >
2016-05-04 18:00:15,127 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=role.getSystemRoleCount】，SQL语句为→    select count(*) as cnt from (             select     t1.role_code,    t1.role_name,    t1.role_type,    t1.role_order,    t1.role_desc     from sys_role t1 where 1=1                          order by t1.role_order asc       ) tt where 1=1  >
2016-05-04 18:00:22,124 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:login!loginOut.ct>
2016-05-04 18:00:22,125 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/login!loginOut.ct>
2016-05-04 18:00:22,125 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 18:00:22,125 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 18:00:22,125 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/login!loginOut.ct>
2016-05-04 18:00:22,125 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 18:00:22,125 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 18:00:22,125 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 18:00:22,125 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 18:00:30,075 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:login!userLogin.ct>
2016-05-04 18:00:30,076 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/login!userLogin.ct>
2016-05-04 18:00:30,077 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 18:00:30,077 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 18:00:30,077 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/login!userLogin.ct>
2016-05-04 18:00:30,077 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 18:00:30,077 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 18:00:30,077 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 18:00:30,078 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 18:00:30,141 ERROR [com.csmy.my.center.dao.UserInfoDao] - <执行【sqlname=admin.getUserByAcount】，SQL语句为→      select * from user_info t where 1=1      and              t.account='admin'                 and              t.password='nbgYr0DpdB8='                   >
2016-05-04 18:00:30,258 ERROR [com.csmy.my.center.dao.UserInfoDao] - <执行【sqlname=admin.getUserExtendInfoById】，SQL语句为→      select * from user_exp_info t where 1=1      and              t.user_id='38521035'              >
2016-05-04 18:00:31,281 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:index!getMainLeftTree.ct>
2016-05-04 18:00:31,281 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/index!getMainLeftTree.ct>
2016-05-04 18:00:31,281 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 18:00:31,281 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 18:00:31,281 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/index!getMainLeftTree.ct>
2016-05-04 18:00:31,281 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 18:00:31,281 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 18:00:31,281 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 18:00:31,281 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 18:00:31,285 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=role.getAllRolePermits】，SQL语句为→         select *     from sys_module m    where m. module_code in          (select distinct t. module_id from sys_role_fun t where t.role_id in ('57414897'))          order by m.module_order asc     >
2016-05-04 18:02:16,992 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:groupOrder!list.ct>
2016-05-04 18:02:16,993 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/groupOrder!list.ct>
2016-05-04 18:02:16,993 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 18:02:16,993 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 18:02:16,993 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/groupOrder!list.ct>
2016-05-04 18:02:16,993 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 18:02:16,993 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 18:02:16,993 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 18:02:16,993 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 18:02:17,366 ERROR [com.csmy.my.center.dao.DaoImpl] - <执行【sqlname=group.getGroupOrderCount】，SQL语句为→   select count(1) from wxb_group_order go where 1=1              >
2016-05-04 18:03:12,731 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!showSenderInfo.ct>
2016-05-04 18:03:12,731 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!showSenderInfo.ct>
2016-05-04 18:03:12,731 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 18:03:12,731 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 18:03:12,732 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!showSenderInfo.ct>
2016-05-04 18:03:12,732 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 18:03:12,732 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 18:03:12,732 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 18:03:12,733 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 18:03:13,106 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getSenderInfo.ct>
2016-05-04 18:03:13,106 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getSenderInfo.ct>
2016-05-04 18:03:13,106 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 18:03:13,106 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 18:03:13,106 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getSenderInfo.ct>
2016-05-04 18:03:13,106 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:XMLHttpRequest>
2016-05-04 18:03:13,106 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 18:03:13,106 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 18:03:13,106 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 18:03:18,792 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!showSenderInfo.ct>
2016-05-04 18:03:18,792 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!showSenderInfo.ct>
2016-05-04 18:03:18,792 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 18:03:18,792 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 18:03:18,793 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!showSenderInfo.ct>
2016-05-04 18:03:18,793 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 18:03:18,793 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 18:03:18,793 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 18:03:18,793 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 18:03:19,246 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:order!getSenderInfo.ct>
2016-05-04 18:03:19,247 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/order!getSenderInfo.ct>
2016-05-04 18:03:19,247 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 18:03:19,247 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 18:03:19,247 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/order!getSenderInfo.ct>
2016-05-04 18:03:19,247 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:XMLHttpRequest>
2016-05-04 18:03:19,247 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 18:03:19,247 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 18:03:19,248 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 18:09:25,205 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:good!goodInfoInit.ct>
2016-05-04 18:09:25,205 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/good!goodInfoInit.ct>
2016-05-04 18:09:25,205 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 18:09:25,205 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 18:09:25,205 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/good!goodInfoInit.ct>
2016-05-04 18:09:25,206 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 18:09:25,206 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 18:09:25,206 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 18:09:25,206 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 18:09:25,394 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:good!getGoodTree.ct>
2016-05-04 18:09:25,394 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/good!getGoodTree.ct>
2016-05-04 18:09:25,394 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 18:09:25,394 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 18:09:25,394 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/good!getGoodTree.ct>
2016-05-04 18:09:25,395 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 18:09:25,395 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 18:09:25,395 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 18:09:25,395 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 18:09:25,396 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=good.getGoodTypeInfo】，SQL语句为→     select * from (     select t. type_id,         t. type_name,         t. type_tag,         t. parent_id,         t. alisa_code,         (select t1.type_name from wxb_good_type t1 where t1.type_id = t.parent_id) as parent_name,         t. order_no    from wxb_good_type t   where 1 = 1              order by t.type_id,t.order_no asc       ) tt where 1=1  >
2016-05-04 18:09:25,403 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:good!getGoodInfo.ct>
2016-05-04 18:09:25,403 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/good!getGoodInfo.ct>
2016-05-04 18:09:25,403 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 18:09:25,404 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 18:09:25,404 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/good!getGoodInfo.ct>
2016-05-04 18:09:25,404 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 18:09:25,404 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 18:09:25,404 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 18:09:25,404 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 18:09:25,409 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=good.getGoodInfo】，SQL语句为→     select * from (                    select t.*,t1.customer_name,t1.customer_type from wxb_good t LEFT JOIN wxb_customer t1 on t.customer_id=t1.customer_id where 1=1                                  order by t.toped_time,create_time desc             ) tt where 1=1          >
2016-05-04 18:09:25,617 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=good.getGoodInfoCount】，SQL语句为→    select count(*) as cnt from (                    select t.*,t1.customer_name,t1.customer_type from wxb_good t LEFT JOIN wxb_customer t1 on t.customer_id=t1.customer_id where 1=1                                  order by t.toped_time,create_time desc             ) tt where 1=1    >
2016-05-04 18:09:25,699 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=resource.getCustomerInfo】，SQL语句为→     select * from (         select t.* from wxb_customer t where 1=1         and     t.state = '1'              order by t.createtime desc       ) tt where 1=1   >
2016-05-04 18:09:30,163 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:good!goodInfoInit.ct>
2016-05-04 18:09:30,163 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/good!goodInfoInit.ct>
2016-05-04 18:09:30,163 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 18:09:30,163 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 18:09:30,164 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/good!goodInfoInit.ct>
2016-05-04 18:09:30,164 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 18:09:30,164 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 18:09:30,164 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 18:09:30,164 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 18:09:30,212 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:good!getGoodTree.ct>
2016-05-04 18:09:30,212 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/good!getGoodTree.ct>
2016-05-04 18:09:30,212 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 18:09:30,212 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 18:09:30,212 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/good!getGoodTree.ct>
2016-05-04 18:09:30,212 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 18:09:30,212 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 18:09:30,212 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 18:09:30,212 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 18:09:30,213 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=good.getGoodTypeInfo】，SQL语句为→     select * from (     select t. type_id,         t. type_name,         t. type_tag,         t. parent_id,         t. alisa_code,         (select t1.type_name from wxb_good_type t1 where t1.type_id = t.parent_id) as parent_name,         t. order_no    from wxb_good_type t   where 1 = 1              order by t.type_id,t.order_no asc       ) tt where 1=1  >
2016-05-04 18:09:30,219 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <temp路径:good!getGoodInfo.ct>
2016-05-04 18:09:30,220 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <正在访问URL:http://localhost:80/wxbsite/good!getGoodInfo.ct>
2016-05-04 18:09:30,220 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <应用路径:/wxbsite>
2016-05-04 18:09:30,220 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <基础路径:http://localhost:80/wxbsite>
2016-05-04 18:09:30,220 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前路径:/good!getGoodInfo.ct>
2016-05-04 18:09:30,220 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求方式:null>
2016-05-04 18:09:30,220 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前请求功能:null>
2016-05-04 18:09:30,220 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前资源标识:null>
2016-05-04 18:09:30,220 ERROR [com.csmy.my.center.filter.AuthorizationInterceptor] - <当前按钮标识:null>
2016-05-04 18:09:30,222 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=good.getGoodInfo】，SQL语句为→     select * from (                    select t.*,t1.customer_name,t1.customer_type from wxb_good t LEFT JOIN wxb_customer t1 on t.customer_id=t1.customer_id where 1=1                                  order by t.toped_time,create_time desc             ) tt where 1=1          >
2016-05-04 18:09:30,339 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=good.getGoodInfoCount】，SQL语句为→    select count(*) as cnt from (                    select t.*,t1.customer_name,t1.customer_type from wxb_good t LEFT JOIN wxb_customer t1 on t.customer_id=t1.customer_id where 1=1                                  order by t.toped_time,create_time desc             ) tt where 1=1    >
2016-05-04 18:09:30,417 ERROR [com.csmy.my.center.dao.IReaderImpl] - <执行【sqlname=resource.getCustomerInfo】，SQL语句为→     select * from (         select t.* from wxb_customer t where 1=1         and     t.state = '1'              order by t.createtime desc       ) tt where 1=1   >
